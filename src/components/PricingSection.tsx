import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Check } from "lucide-react";

const plans = [
  {
    name: "BN Essential",
    price: "$200~5tr",
    period: "/th√°ng (Hƒê 12 th√°ng)",
    description: "G√≥i c∆° b·∫£n cho doanh nghi·ªáp v·ª´a v√† nh·ªè",
    features: [
      "Account kh√¥ng gi·ªõi h·∫°n",
      "3,000 leads (+1,000 = $10/th√°ng)",
      "L∆∞u tr·ªØ nh·∫≠t k√Ω 12 th√°ng",
      "3 WEB li√™n k·∫øt",
      "10 Form WEB",
      "30,000 Page view/th√°ng",
      "G·ª≠i email kh√¥ng gi·ªõi h·∫°n",
      "T·∫°o tr∆∞·ªùng t√πy ch·ªânh",
      "MiniCRM c∆° b·∫£n",
      "Li√™n k·∫øt API",
      "BowNow Companion (Chat + Online 1to1)",
      "Audit B2B Email Marketing"
    ],
    buttonText: "B·∫Øt ƒë·∫ßu d√πng th·ª≠",
    popular: false
  },
  {
    name: "BN Standard", 
    price: "$300~7tr5",
    period: "/th√°ng (Hƒê 12 th√°ng)",
    description: "G√≥i ti√™u chu·∫©n cho doanh nghi·ªáp ƒëang ph√°t tri·ªÉn",
    features: [
      "Account kh√¥ng gi·ªõi h·∫°n",
      "5,000 leads (+1,000 = $10/th√°ng)",
      "L∆∞u tr·ªØ nh·∫≠t k√Ω 24 th√°ng",
      "WEB li√™n k·∫øt kh√¥ng gi·ªõi h·∫°n",
      "Form WEB kh√¥ng gi·ªõi h·∫°n",
      "50,000 Page view/th√°ng",
      "G·ª≠i email kh√¥ng gi·ªõi h·∫°n",
      "T·∫°o tr∆∞·ªùng t√πy ch·ªânh",
      "MiniCRM c∆° b·∫£n",
      "Li√™n k·∫øt API",
      "BowNow Companion (Chat + Online 1to1)",
      "Audit B2B Email Marketing"
    ],
    buttonText: "N√¢ng c·∫•p ngay",
    popular: true
  },
  {
    name: "BN Premium",
    price: "$500~12tr5",
    period: "/th√°ng (Hƒê 12 th√°ng)",
    description: "G√≥i cao c·∫•p cho doanh nghi·ªáp l·ªõn",
    features: [
      "Account kh√¥ng gi·ªõi h·∫°n",
      "20,000 leads (+1,000 = $5/th√°ng)",
      "L∆∞u tr·ªØ nh·∫≠t k√Ω 24 th√°ng",
      "WEB li√™n k·∫øt kh√¥ng gi·ªõi h·∫°n",
      "Form WEB kh√¥ng gi·ªõi h·∫°n",
      "100,000 Page view/th√°ng",
      "G·ª≠i email kh√¥ng gi·ªõi h·∫°n",
      "T·∫°o tr∆∞·ªùng t√πy ch·ªânh",
      "MiniCRM c∆° b·∫£n",
      "Li√™n k·∫øt API",
      "BowNow Companion (Chat + Online 1to1)",
      "Audit B2B Email Marketing"
    ],
    buttonText: "Li√™n h·ªá t∆∞ v·∫•n",
    popular: false
  }
];

const includedFeatures = [
  "T√≠ch h·ª£p v·ªõi h·ªá th·ªëng CRM kh√°c d·ªÖ d√†y d·ªØ li·ªáu Hot Lead t·ª´ BowNow qua (Sync 2 chi·ªÅu)",
  "GDPR & CCPA compliant, b·∫£o m·∫≠t c·∫•p ng√¢n h√†ng", 
  "Onboarding support v√† training mi·ªÖn ph√≠",
  "99.9% uptime SLA v·ªõi infrastructure to√†n c·∫ßu",
  "Kh√¥ng gi·ªõi h·∫°n email sends v√† automation triggers",
  "*Khi v∆∞·ª£t qu√° s·ªë l∆∞·ª£ng PV, m·ªói 10,000 PV s·∫Ω ƒë∆∞·ª£c t√≠nh $10 m·ªói th√°ng"
];

const whyChoose = [
  "ROI trung b√¨nh 300% trong nƒÉm ƒë·∫ßu", 
  "Support team Vi·ªát Nam, hi·ªÉu business ƒë·ªãa ph∆∞∆°ng",
  "Kh√¥ng c√≥ ph√≠ setup hay contract r√†ng bu·ªôc d√†i h·∫°n",
  "Tri·ªÉn khai nhanh ch√≥ng v√† hi·ªáu qu·∫£"
];

const savings = [
  "60% th·ªùi gian qu·∫£n l√Ω leads th·ªß c√¥ng",
  "40% chi ph√≠ hiring th√™m sales admin",
  "80% th·ªùi gian t·∫°o b√°o c√°o sales", 
  "90% risk m·∫•t leads do follow-up kh√¥ng k·ªãp"
];

const PricingSection = () => {
  return (
    <section className="py-20 bg-secondary/30">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <Badge variant="secondary" className="mb-4">üí∞ B·∫£ng gi√°</Badge>
          <h2 className="text-3xl lg:text-4xl font-bold mb-4">
            Ch·ªçn g√≥i ph√π h·ª£p v·ªõi quy m√¥ c·ªßa b·∫°n
          </h2>
          <p className="text-xl text-muted-foreground max-w-4xl mx-auto">
            B·∫Øt ƒë·∫ßu mi·ªÖn ph√≠ 14 ng√†y, kh√¥ng c·∫ßn th·∫ª t√≠n d·ª•ng. N√¢ng c·∫•p ho·∫∑c h·ªßy b·∫•t c·ª© l√∫c n√†o. 
            T·∫•t c·∫£ g√≥i ƒë·ªÅu bao g·ªìm implementation support v√† training.
          </p>
        </div>
        
        <div className="grid lg:grid-cols-3 gap-8 mb-16">
          {plans.map((plan, index) => (
            <Card key={index} className={`relative hover:shadow-xl transition-all duration-300 ${plan.popular ? 'border-primary border-2' : ''}`}>
              {plan.popular && (
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                  <Badge className="bg-primary text-primary-foreground">
                    Ph·ªï bi·∫øn nh·∫•t
                  </Badge>
                </div>
              )}
              {plan.name === "Enterprise" && (
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                  <Badge variant="outline">
                    T√πy ch·ªânh
                  </Badge>
                </div>
              )}
              
              <CardHeader className="text-center">
                <CardTitle className="text-2xl mb-2">{plan.name}</CardTitle>
                <div className="mb-4">
                  <span className="text-3xl font-bold text-primary">{plan.price}</span>
                  <span className="text-muted-foreground">{plan.period}</span>
                </div>
                <CardDescription className="text-base">
                  {plan.description}
                </CardDescription>
              </CardHeader>
              
              <CardContent className="space-y-6">
                <ul className="space-y-3">
                  {plan.features.map((feature, idx) => (
                    <li key={idx} className="flex items-center text-sm">
                      <Check className="w-4 h-4 text-primary mr-3 flex-shrink-0" />
                      {feature}
                    </li>
                  ))}
                </ul>
                
                <Button 
                  className={`w-full ${plan.popular ? 'bg-primary hover:bg-primary/90' : ''}`}
                  variant={plan.popular ? 'default' : 'outline'}
                  size="lg"
                >
                  {plan.buttonText}
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>
        
        <div className="grid md:grid-cols-3 gap-8">
          <Card className="text-center">
            <CardHeader>
              <CardTitle className="text-lg">T·∫•t c·∫£ g√≥i ƒë·ªÅu bao g·ªìm:</CardTitle>
            </CardHeader>
            <CardContent>
              <ul className="text-sm space-y-2 text-left">
                {includedFeatures.map((feature, idx) => (
                  <li key={idx} className="flex items-start">
                    <Check className="w-4 h-4 text-primary mr-2 flex-shrink-0 mt-0.5" />
                    {feature}
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>
          
          <Card className="text-center">
            <CardHeader>
              <CardTitle className="text-lg">T·∫°i sao ch·ªçn BOW-NOW?</CardTitle>
            </CardHeader>
            <CardContent>
              <ul className="text-sm space-y-2 text-left">
                {whyChoose.map((reason, idx) => (
                  <li key={idx} className="flex items-start">
                    <div className="w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0 mt-2" />
                    {reason}
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>
          
          <Card className="text-center">
            <CardHeader>
              <CardTitle className="text-lg">B·∫°n s·∫Ω ti·∫øt ki·ªám ƒë∆∞·ª£c g√¨?</CardTitle>
            </CardHeader>
            <CardContent>
              <ul className="text-sm space-y-2 text-left">
                {savings.map((saving, idx) => (
                  <li key={idx} className="flex items-start">
                    <div className="w-2 h-2 bg-primary rounded-full mr-3 flex-shrink-0 mt-2" />
                    {saving}
                  </li>
                ))}
              </ul>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
};

export default PricingSection;